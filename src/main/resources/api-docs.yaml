openapi: 3.0.1
info:
  title: Product API
  description: Product Microservice
  version: "2.0"
servers:
- url: http://localhost:9191
  description: Generated server url
paths:
  /update:
    put:
      tags:
      - product-controller
      operationId: updateProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Product"
  /addProducts:
    post:
      tags:
      - product-controller
      operationId: addProducts
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Product"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
  /addProduct:
    post:
      tags:
      - product-controller
      operationId: addProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Product"
  /products:
    get:
      tags:
      - product-controller
      operationId: findAllProducts
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
  /productByName/{name}:
    get:
      tags:
      - product-controller
      operationId: findProductByName
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Product"
  /productByID/{id}:
    get:
      tags:
      - product-controller
      operationId: findProductById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Product"
  /delete/{id}:
    delete:
      tags:
      - product-controller
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        quantity:
          type: integer
          format: int32
        price:
          type: number
          format: double
